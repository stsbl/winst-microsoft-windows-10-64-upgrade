[Initial]
Encoding=UTF-8
Message=Führe Windows 10 Upgrade durch...
DefStringList $MSVersionMap$
DefVar $AdminGroup$
DefVar $AutoAdminLogon$
DefVar $AutoLogonDomain$
DefVar $AutoLogonPassword$
DefVar $AutoLogonUser$
DefVar $BuildNumber$
DefVar $Hostname$
DefVar $LocalDomain$
DefVar $MSVersionInfo$
DefVar $PCPatchPassword$
DefVar $Progress$
DefVar $Servername$
DefVar $Status$
DefVar $SupportedBuildNumber$
DefVar $UpgradeRequired$
DefVar $UpgradeSetupAdminPassword$
DefVar $UserGroup$

[Actions]
ShowBitmap "%ScriptPath%\logo.png" "Windows 10 Upgrade"
Sub_Start

[Sub_Start]
Set $Progress$ = GetRegistryStringValue32("[HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\winst\%installingProdName%] Progress")
; https://en.wikipedia.org/wiki/Windows_10_version_history
;Set $SupportedBuildNumber$ = "17763"
; To force to re-upgrade of clients which are up-to-date (for testing purposes)
Set $SupportedBuildNumber$ = "99999"

if ($Progress$ = "")
  ; Schritt 1: Autologin-Zustand sichern, lokalen Admin anlegen, Autologin
  ; einrichten, Tastatur und Maus sperren, lokales Skript und Setup kopieren
  ; und in den Autostart legen, Neuinstallation vormerken, Computer neu
  ; starten.
  Sub_StepOne
endif

if ($Progress$ = "1")
  ; Schritt 2: Dieser Teil läuft lokal ab - Upgrade ausführen und prüfen ob das
  ; erfolgreich war, Fehler speichern und Computer neu starten, siehe
  ; localsetup.ins
  ; Falls das Hauptskript während des Setupvorgangs startet, Neuinstallation
  ; vormerken und Skript sofort beenden, damit Login des Admins möglich ist.
  OpsiServiceCall_Reinstall
  ExitWindows /ImmediateLogout
endif

if ($Progress$ = "2")
  ; Nach dem das Upgrade durchgeführt wurde, Tastatur erneut sperren (sie wird
  ; wieder freigegeben und ermöglicht es jedermann Admin-Rechte zu erlangen).
  Registry_LockKeyboard
  Set $Progress$ = "3"
  Registry_UpdateProgress /32bit
  OpsiServiceCall_Reinstall
  ExitWindows /ImmediateReboot
endif

if ($Progress$ = "3")
  Set $Progress$ = "4"
  Registry_UpdateProgress /32bit
  OpsiServiceCall_Reinstall
  ExitWindows /ImmediateReboot
endif

if ($Progress$ = "4")
  ; Nach erfolgten Upgrade aufräumen
  Sub_StepTwo
  OpsiServiceCall_Reinstall
  ExitWindows /ImmediateReboot
endif

[Sub_Check]
Set $MSVersionInfo$ = GetMsVersionInfo
if CompareDotSeparatedNumbers($MSVersionInfo$, "<", "10.0")
  LogError "This package requires Windows 10."
  IsFatalError
endif

Set $MSVersionMap$ = GetMSVersionMap
Set $BuildNumber$ = TakeString("1", SplitString(TakeString("2", $MSVersionMap$), "="))

if CompareDotSeparatedNumbers($BuildNumber$, "<", $SupportedBuildNumber$)
  Set $UpgradeRequired$ = "true"
else
  comment "No upgrade required, Windows 10 seems to be up-to-date."
  Set $UpgradeRequired$ = "false"
endif

[Sub_StepOne]
Sub_Check
if ($UpgradeRequired$ = "true")
  ; Cleanup every rests to prevent conflicts
  Files_Cleanup
  Files_Copy
  Sub_BackupAutoLogon
  Sub_EnableAutoLogon
  Registry_LockKeyboard
  PatchTextFile_Startup "%CommonStartupDir%\Windows 10 Upgrade.bat"
  Sub_GetHostname
  Sub_GetServername
  Sub_GetPCPatchPassword
  PatchTextFile_OpsiClientAgentBatch "%SystemDrive%\tmp\%installingProdName%\opsi-client-agent.bat"
  Set $Progress$ = "1"
  Registry_UpdateProgress /32bit
  Registry_DisableUAC /SysNative
  OpsiServiceCall_Reinstall
  ExitWindows /ImmediateReboot
endif

[Sub_StepTwo]
Sub_RestoreAutoLogon
DosInAnIcon_UserDel
Files_Cleanup
LinkFolder_Cleanup
Registry_UnlockKeyboard
Set $Progress$ = ""
Registry_UpdateProgress /32bit
Registry_Cleanup /32bit
Registry_EnableUAC /SysNative
Sub_Check
ExitWindows /Reboot
if ($UpgradeRequired$ = "true")
  LogError "Windows 10 is still not up-to-date."
  IsFatalError
else
  ; Reinstall Registry Patch and Client Agent to apply some settings which are
  ; lost during upgrade again
  OpsiServiceCall_Reinstall_RegPatch
  OpsiServiceCall_Reinstall_ClientAgent
endif

[Registry_Cleanup]
deletekey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\winst\%installingProdName%]

[LinkFolder_Cleanup]
set_basefolder common_startup
delete_element "Windows 10 Upgrade"

[Files_Copy]
copy -se "%ScriptPath%\data\*" "%SystemDrive%\tmp\%installingProdName%\"
copy "%ScriptPath%\local\*.*" "%SystemDrive%\tmp\%installingProdName%\"
copy "%ScriptPath%\logo.png" "%SystemDrive%\tmp\%installingProdName%\"
copy "%ScriptPath%\nircmd\*.*" "%SystemDrive%\tmp\nircmd\"
copy "%ScriptDrive%\install\iserv-windows-regpatch\netlogon\win10.reg" "%SystemDrive%\tmp\%installingProdName%\"
copy -se "%ScriptDrive%\install\opsi-client-agent\*" "%SystemDrive%\tmp\opsi-client-agent\"

[Files_Cleanup]
delete -sfc "%SystemDrive%\tmp\%installingProdName%\"
delete -sfc "%SystemDrive%\tmp\opsi-client-agent\"
delete -sfc "%SystemDrive%\tmp\nircmd\"
delete -fc "%CommonStartupDir%\Windows 10 Upgrade.bat"
delete -fc "%opsiLogDir%\%installingProdName%.log"
delete -fc "%opsiLogDir%\%installingProdName%.err"
delete -fc "%opsiLogDir%\%installingProdName%.history"

[Sub_BackupAutoLogon]
Set $AutoLogonPassword$ = GetRegistryStringValueSysnative("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon] DefaultPassword")
Set $AutoLogonUser$ = GetRegistryStringValueSysnative("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon] DefaultUserName")
Set $AutoLogonDomain$ = GetRegistryStringValueSysnative("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon] DefaultDomainName")
Set $AutoAdminLogon$ = GetRegistryStringValueSysnative("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon] AutoAdminLogon")
Registry_SaveAutoLogon /32bit

[Registry_SaveAutoLogon]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\winst\%installingProdName%\Winlogon]
set "DefaultPassword" = "$AutoLogonPassword$"
set "DefaultUserName" = "$AutoLogonUser$"
set "DefaultDomainName" = "$AutoLogonDomain$"
set "AutoAdminLogon" = "$AutoAdminLogon$"

[Sub_RestoreAutoLogon]
Set $AutoLogonPassword$ = GetRegistryStringValue32("[HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\winst\%installingProdName%\Winlogon] DefaultPassword")
Set $AutoLogonUser$ = GetRegistryStringValue32("[HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\winst\%installingProdName%\Winlogon] DefaultUserName")
Set $AutoLogonDomain$ = GetRegistryStringValue32("[HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\winst\%installingProdName%\Winlogon] DefaultDomainName")
Set $AutoAdminLogon$ = GetRegistryStringValue32("[HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\winst\%installingProdName%\Winlogon] AutoAdminLogon")

Registry_RestoreAutoLogin /SysNative

[Registry_RestoreAutoLogin]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon]
set "DefaultUserName"="$AutoLogonUser$"
set "DefaultPassword"="$AutoLogonPassword$"
set "DefaultDomainName"="$AutoLogonDomain$"
set "AutoAdminLogon"="$AutoAdminLogon$"

[Sub_EnableAutoLogon]
Set $UpgradeSetupAdminPassword$ = RandomStr
Set $LocalDomain$ = "%PCName%"
Set $AdminGroup$ = SidToName("S-1-5-32-544")
Set $UserGroup$ = SidToName("S-1-5-32-545")
DosInAnIcon_UserDel
DosInAnIcon_UserAdd
Registry_EnableAutoLogin /SysNative

[DosInAnIcon_UserDel]
@echo off
net user UpgradeSetupAdmin /delete
del /S /Q "%ProfileDir%\UpgradeSetupAdmin"

[DosInAnIcon_UserAdd]
@echo off
net user UpgradeSetupAdmin $UpgradeSetupAdminPassword$ /add
net localgroup $AdminGroup$ /add UpgradeSetupAdmin
; Ensures that our Setup admin is logged in with administrative privileges
; to circumvent UAC
net localgroup $UserGroup$ /delete UpgradeSetupAdmin

[Registry_EnableAutoLogin]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon]
set "DefaultUserName"="UpgradeSetupAdmin"
set "DefaultPassword"="$UpgradeSetupAdminPassword$"
set "DefaultDomainName"="$LocalDomain$"
set "AutoAdminLogon"="1"

[Registry_LockKeyboard]
openkey [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Kbdclass]
set "Start"=REG_DWORD:0x4
openkey [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Mouclass]
set "Start"=REG_DWORD:0x4

[Registry_UnlockKeyboard]
openkey [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Kbdclass]
set "Start"=REG_DWORD:0x1
openkey [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Mouclass]
set "Start"=REG_DWORD:0x1

[PatchTextFile_Startup]
GoToTop
AddLine '"%WinstDir%\winst32.exe" "%SystemDrive%\tmp\%installingProdName%\localsetup.ins" /logfile "%opsiLogDir%\%installingProdName%.log" /batch'

[PatchTextFile_OpsiClientAgentBatch]
GoToTop
AddLine '@echo off'
; kill explorer to hide the windows gui
AddLine 'taskkill /IM explorer.exe /F'
AddLine 'reg.exe import %SystemDrive%\tmp\%installingProdName%\win10.reg'
AddLine 'net use p: \\$Hostname$\netlogon $PCPatchPassword$ /user:pcpatch /persistent:no'
AddLine 'call %SystemDrive%\tmp\opsi-client-agent\install.bat %opsiservicePassword% $Servername$ $Hostname$'
AddLine 'reg.exe import %SystemDrive%\tmp\%installingProdName%\progress_step_3.reg /reg:32'
AddLine 'net use p: /delete /yes'
AddLine 'net use p: \\$Hostname$\deploy $PCPatchPassword$ /user:pcpatch /persistent:no'
AddLine '"%WinstDir%\winst32.exe" /opsiservice "https://$Servername$:4447" /clientid "%PCName%" /username "%PCName%" /password "%opsiservicePassword%" /productlist "%installingProdName%"'
Addline 'net use p: /delete /yes'
AddLine 'timeout /T 60 > NUL'
AddLine 'shutdown /r /t 0'

[Registry_UpdateProgress]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\winst\%installingProdName%]
set "Progress" = "$Progress$"

[OpsiServiceCall_Reinstall]
"method":"setProductActionRequest"
"params":[
    "%installingProdName%",
    "",
    "setup"
]

[OpsiServiceCall_Reinstall_RegPatch]
"method":"setProductActionRequest"
"params":[
    "iserv-windows-regpatch",
    "",
    "setup"
]

[OpsiServiceCall_Reinstall_ClientAgent]
"method":"setProductActionRequest"
"params":[
    "opsi-client-agent",
    "",
    "setup"
]

[OpsiServiceCall_GetHostname]
"method":"iserv_cfg"
"params":[
  "Hostname"
]

[OpsiServiceCall_GetServername]
"method":"iserv_cfg"
"params":[
  "Servername"
]

[OpsiServiceCall_GetPCPatchPassword]
"method":"iserv_pcpatch_password"
"params":[]

[Registry_DisableUAC]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System]
set "EnableLUA" = REG_DWORD:0
set "ConsentPromptBehaviorAdmin" = REG_DWORD:0

[Registry_EnableUAC]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System]
set "EnableLUA" = REG_DWORD:1
set "ConsentPromptBehaviorAdmin" = REG_DWORD:0

[Sub_GetHostname]
Set $Hostname$ = TakeString(0, GetReturnListFromSection("OpsiServiceCall_GetHostname"))

[Sub_GetServername]
Set $Servername$ = TakeString(0, GetReturnListFromSection("OpsiServiceCall_GetServername"))

[Sub_GetPCPatchPassword]
SetLogLevel=4
Set $PCPatchPassword$ = TakeString(0, GetReturnListFromSection("OpsiServiceCall_GetPCPatchPassword"))
SetConfidential $PCPatchPassword$
SetLogLevel=6
